---
- set_fact:
    envs_string: '{% for key, value in default_api_envs.iteritems() %}{{ key }}={{ value }}{% if not loop.last %},{% endif %}{% endfor %}'
- set_fact:
    envs_list: '{{ envs_string.split(",") }}'
- set_fact:
    redis_env:
      - TERM_CHILD=1
      - QUEUE=*
#- debug: var=envs_list

# - name: Log in to docker registry
#   docker_login:
#     registry: quay.io
#     username: '{{ docker_username }}'
#     password: '{{ docker_password }}'

- name: Spin up Application Containers
  docker_service:
    project_name: default
    # pull: yes
    definition:
      version: '2'
      services:
        redis:
          image: redis

        db:
          image: postgres
          environment:
            - POSTGRES_DB={{default_api_envs.DATABASE_NAME}}
            - POSTGRES_PASSWORD={{default_api_envs.DATABASE_PASSWORD}}
            - POSTGRES_USER={{default_api_envs.DATABASE_USERNAME}}

        api:
          depends_on:
            - db
            - redis
          environment: '{{ envs_list }}'
          image: 'quay.io/example/default-api:{{ image_tag }}'
          ports:
            - '3000:3000'
          volumes:
            - '/home/admin/data:/data'
          # command: 'bundle exec rake db:clean:migrate'

        # scheduler:
        #   command: 'bundle exec rake scheduler'
        #   depends_on:
        #     - db
        #     - redis
        #   environment: '{{ envs_list + redis_env }}'
        #   image: 'quay.io/example/default-api:deploy'
        #   volumes:
        #     - '/home/admin/data:/data'

        # resque:
        #   command: 'bundle exec rake resque:work'
        #   depends_on:
        #     - db
        #     - redis
        #   environment: '{{ envs_list + redis_env }}'
        #   image: 'quay.io/example/default-api:deploy'
        #   volumes:
        #     - '/home/admin/data:/data'

- name: Migrate the database
  command: docker exec -t default_api_1 bundle exec rake db:migrate

#- name: Seed the database
#  command: docker exec -t default_api_1 bundle exec rake db:seed
