#!/usr/bin/env ansible-playbook
# NOTE: This playbook:
#   - installs the application's service dependencies on local machine
#   - pulls the application sources from a repository
#   - initializes the application(s)
# TODO: Test this with running a docker container using compose
---
- hosts: dev
  vars_files: [app-vars.yml]

  tasks:
    - debug: var=project
    - debug: var=app_vars

- hosts: ydev
  roles:
    # NOTE: Uses inventory/group_vars/<group>/vars.yml to create PG user
    # - postgres
    # - redis
    # - nodejs
    # 'cool_app_1' application
    # - nginx
    # - { role: ruby, ruby_version: '{{ apps.cool_app_1.ruby.version }}' }
    # - { role: app-development, action: 'create-env-file', config: '{{ apps.cool_app_1 }}', envs: '{{ app_vars.cool_app_1.envs }}' }
    # - { role: app-development, action: 'clone-repos', config: '{{ apps.cool_app_1 }}' }
    # - { role: app-development, action: 'rails-init', config: '{{ apps.cool_app_1 }}' }

    # 'cool_app_2' application
    # - { role: ruby, ruby_version: '{{ apps.cool_app_2.ruby.version }}' }
    # - { role: app-development, action: 'create-env-file', config: '{{ apps.cool_app_2 }}', envs: '{{ app_vars.cool_app_2.envs }}' }
    # - { role: app-development, action: 'clone-repos', config: '{{ apps.cool_app_2 }}' }
    # - { role: app-development, action: 'rails-init', config: '{{ apps.cool_app_2 }}' }

  tasks:
    - name: Configure nginx to forward requests to app server and dashboard
      template:
        src: templates/nginx-default
        dest: /etc/nginx/sites-enabled/default
        mode: 0644
      become: yes
      notify: Restart Nginx

    # TODO: Linking in tmuxinator files should probably belong to the project itself
    # NOTE: Linking .env files could also be part of the project, in a bin/setup script or so
    # - name: Create tmuxinator soft links
    #   shell: bin/link
    #   args:
    #     chdir: '{{ dev.directory }}/cool_app_1/api-common'
