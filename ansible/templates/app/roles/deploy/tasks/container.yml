---
- set_fact:
    envs_string: '{% for key, value in api_server.iteritems() %}{{ key }}={{ value }}{% if not loop.last %},{% endif %}{% endfor %}'
- set_fact:
    envs_list: '{{ envs_string.split(",") }}'
- set_fact:
    redis_env:
      - TERM_CHILD=1
      - QUEUE=*
- debug: var=envs_list
#- debug: var=docker_username

- name: Log in to docker registry
  docker_login:
    registry: quay.io
    username: '{{ docker_username }}'
    password: '{{ docker_password }}'
    reauthorize: yes

# NOTE: ansible's docker_service module has a bug that when pull: yes
#       and the image does not yet exist on the server ansible will throw up
#       The bug is fixed in ansible 2.3 (not yet released)
# TODO: Remove this task after upgrading to ansible 2.3
# https://github.com/ansible/ansible-modules-core/pull/5159
- name: Pull images
  docker_image:
    name: '{{ item.image }}'
    tag: '{{ item.tag }}'
  with_items:
    - { image: 'redis', tag: 'latest' }
    - { image: 'postgres', tag: 'latest' }
    - { image: 'quay.io/example/app', tag: '{{ image_tag }}' }

- name: Spin up Application Containers
  docker_service:
    project_name: 'app{{ application_flavor }}'
    pull: yes
    definition:
      version: '2'
      services:
        redis:
          image: redis

        db:
          image: postgres
          environment:
            - POSTGRES_DB={{ api_server.DATABASE_NAME }}
            - POSTGRES_PASSWORD={{ api_server.DATABASE_PASSWORD }}
            - POSTGRES_USER={{ api_server.DATABASE_USERNAME }}

        api:
          depends_on:
            - db
            - redis
          environment: '{{ envs_list }}'
          image: 'quay.io/example/app:{{ image_tag }}'
          ports:
            - '3000:3000'
          volumes:
            - '/home/admin/data:/data'
          # command: 'bundle exec rake db:clean:migrate'

        # scheduler:
        #   command: 'bundle exec rake scheduler'
        #   depends_on:
        #     - db
        #     - redis
        #   environment: '{{ envs_list + redis_env }}'
        #   image: 'quay.io/example/app:deploy'
        #   volumes:
        #     - '/home/admin/data:/data'

        # resque:
        #   command: 'bundle exec rake resque:work'
        #   depends_on:
        #     - db
        #     - redis
        #   environment: '{{ envs_list + redis_env }}'
        #   image: 'quay.io/example/app:deploy'
        #   volumes:
        #     - '/home/admin/data:/data'
#
- name: Migrate the database
  command: 'docker exec -t app{{ application_flavor }}_api_1 bundle exec rake db:migrate'
#
# - name: Seed the database
#   command: docker exec -t api_1 bundle exec rake db:seed
